#!/bin/bash

SESSION_NAME="$(basename "$PWD" | tr . -)"

session_exists() {
  tmux list-sessions | sed -E 's/:.*$//' | grep -q "^$SESSION_NAME$"
}

if [ -z "$TMUX" ]; then
  if [ "$PWD" = "$HOME" ]; then
    SESSION_NAMES=()
    while IFS='' read -r line; do
      SESSION_NAMES+=("$line")
    done < <(tmux list-sessions -F\#S)

    if [ "${#SESSION_NAMES[@]}" -eq 0 ]; then
      exit 0
    fi

    k=0

    echo
    echo "Choose a session to attach to:"

    for name in "${SESSION_NAMES[@]}"; do
      k=$((k+1))

      echo "  [$k] $name"
    done

    echo

    read -r input

    if [[ $input =~ ^[0-9]+$ ]] && [ "$input" -gt 0 ] && [ "$input" -le $k ]; then
      SESSION_NAME="${SESSION_NAMES[input - 1]}"
    else
      exit 0
    fi
  elif ! session_exists; then
    # Create a new session.
    tmux new-session -d -s "$SESSION_NAME"

    # Rename the window.
    tmux rename-window -t 1 code

    # Split window for test and terminal panes.
    tmux split-window -t 1 -hl 35%
    tmux split-window -t 2 -vl 20%

    # Select the vim pane.
    tmux select-pane -t 1

    # Wait for the panes to initialize.
    sleep 0.5

    # Launch vim and attach vim-tmux-runner to the second pane. If there's a
    # `.todo` file, open it.
    if [ -f .todo ]; then
      tmux send-keys -t 1 'vim -c "silent VtrAttachToPane 2" .todo' C-m
    else
      tmux send-keys -t 1 'vim -c "silent VtrAttachToPane 2" .' C-m
    fi

    # Display the git status in the terminal pane.
    tmux send-keys -t 3 'git status' C-m
  fi

  # Attach to the session.
  tmux attach-session -t "$SESSION_NAME:1"
else
  tmux switch-client -t "$SESSION_NAME"
fi
