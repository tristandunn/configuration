# General {{{
# Remap prefix to Control + f combination.
set -g prefix C-f
unbind C-f
bind C-f send-prefix

# Use vim keybindings.
set -g status-keys vi
setw -g mode-keys vi

# Enable mouse support.
set -g mouse on

# Remove escape time delay.
set -sg escape-time 0

# Customize the default terminal, focus events, and features.
set-option -g  default-terminal screen-256color
set-option -g  focus-events on
set-option -sa terminal-features ',xterm-kitty:RGB'
# }}}
# Status Bar {{{
set -g status-bg "#111111"
set -g status-fg "white"

# Start the window and pane indexes at one.
set -g base-index 1
set -g pane-base-index 1

# Automatically renumber windows as they change.
set -g renumber-windows on

# Display the session name in the left status.
set-option -g status-left '#[bg=#222222,fg=#BBBBBB] #S #[bg=#111111,fg=#222222]'
set-option -g status-left-length 24

# Center the window list and customize the style.
set-option -g status-justify centre
set-window-option -g window-status-format ' #[fg=#96CAFD,dim]#I:#W '
set-window-option -g window-status-current-format '#[fg=#96CAFD]#[bg=#96CAFD,fg=#000000,bold] #I:#W #[bg=#111111,fg=#96CAFD]'

# Disable the right status.
set -g status-right '#[bg=#111111,fg=#222222]#[bg=#222222,fg=#BBBBBB] #(git rev-parse --abbrev-ref HEAD) '
# }}}
# Shortcuts {{{
# Create a new window using the pane's current path.
bind c new-window -c "#{pane_current_path}"

# Split the window vertically and horizontally using the pane's current path.
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \\ split-window -h  -c '#{pane_current_path}'

# Add vim-like navigation for panes.
bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R

# Add a shortcut to kill the current session.
bind-key k confirm-before kill-session

# Force a reload of the configuration file.
unbind r
bind r source-file ~/.tmux.conf

# Add vim-like selection and copying.
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"

# Update default binding of Enter to match.
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "pbcopy"
# }}}
# alexghergh/nvim-tmux-navigation {{{
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/alexghergh/nvim-tmux-navigation#tmux
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+
# }}}

# vim:foldmethod=marker:foldlevel=0
