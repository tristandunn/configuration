# Unix
alias c="clear"
alias ls="ls -l"
alias rm="trash"
alias vim="nvim"

# git
alias g="git"
alias gadd="git a"

# Bundler
alias be="bundle exec"
alias br="rake_command"

# Rails
alias rc="console_command"
alias rs="server_command"
alias rake="rake_command"
alias rspec="rspec_command"
alias deploy="deploy_command"
alias migrate="rake_command db:migrate"
alias rubocop="rubocop_command"

# Postgres
alias pg_start="pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start"
alias pg_stop="pg_ctl -D /usr/local/var/postgres stop -s -m fast"

# Redis
alias redis_start="redis-server /usr/local/etc/redis.conf --daemonize yes"
alias redis_stop="redis-cli shutdown"

# Miscellaneous
alias brewhaha="brew cleanup -s && brew old"
alias icloud="cd ~/Library/Mobile\ Documents"
alias icloud-obsidian="cd ~/Library/Mobile\ Documents/iCloud~md~obsidian/Documents/Personal"

# Helpers
console_command() {
  if [ -f app.rb ]; then
    bundle exec irb --multiline -r./app.rb
  else
    rails_command console
  fi
}

deploy_command() {
  if [ -f bin/kamal ]; then
    if [ -f .env ]; then
      if [ -z "$1" ]; then
        eval $(cat .env) bin/kamal deploy "$@"
      else
        eval $(cat .env) bin/kamal "$@"
      fi
    else
      echo "No environment variables found."
    fi
  else
    echo "No bin/kamal script found."
  fi
}

server_command() {
  if [ -f bin/dev ]; then
    bin/dev
  elif [ -f Procfile.dev ]; then
    foreman start -f Procfile.dev
  elif [ -f Procfile ]; then
    foreman start
  else
    rails_command server
  fi
}

rails_command() {
  if [ -f bin/rails ]; then
    bin/rails "$@"
  else
    bundle exec rails "$@"
  fi
}

rake_command() {
  if [ -f bin/rake ]; then
    bin/rake "$@"
  else
    bundle exec rake "$@"
  fi
}

rspec_command() {
  if [ -f bin/rspec ]; then
    bin/rspec "$@"
  else
    bundle exec rspec "$@"
  fi
}

rubocop_command() {
  if [ -f bin/rubocop ]; then
    bin/rubocop -P "$@"
  elif [ -f Gemfile ]; then
    bundle exec rubocop -P "$@"
  fi
}

services-start() {
  brew services start memcached
  brew services start postgresql
  brew services start redis
}

services-stop() {
  brew services stop memcached
  brew services stop postgresql
  brew services stop redis
}
